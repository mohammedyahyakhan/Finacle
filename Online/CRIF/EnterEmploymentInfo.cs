///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CRIF
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnterEmploymentInfo recording.
    /// </summary>
    [TestModule("7e623449-4deb-4fa1-bb68-7d99163650f8", ModuleType.Recording, 1)]
    public partial class EnterEmploymentInfo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CRIFRepository repository.
        /// </summary>
        public static CRIFRepository repo = CRIFRepository.Instance;

        static EnterEmploymentInfo instance = new EnterEmploymentInfo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnterEmploymentInfo()
        {
            AnnualSalary = "";
            JobTitle = "JobTitle";
            CurrentEmployer = "";
            EmployeeType = "";
            YearsWorked = "";
            MonthsWorked = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnterEmploymentInfo Instance
        {
            get { return instance; }
        }

#region Variables

        string _AnnualSalary;

        /// <summary>
        /// Gets or sets the value of variable AnnualSalary.
        /// </summary>
        [TestVariable("e173b90f-00c9-4e22-a592-c5e463f17634")]
        public string AnnualSalary
        {
            get { return _AnnualSalary; }
            set { _AnnualSalary = value; }
        }

        string _JobTitle;

        /// <summary>
        /// Gets or sets the value of variable JobTitle.
        /// </summary>
        [TestVariable("dbd85aee-9e1b-4665-b777-6a7783795481")]
        public string JobTitle
        {
            get { return _JobTitle; }
            set { _JobTitle = value; }
        }

        string _CurrentEmployer;

        /// <summary>
        /// Gets or sets the value of variable CurrentEmployer.
        /// </summary>
        [TestVariable("6e56f142-6bda-49a5-8f90-2b61cc0f6c53")]
        public string CurrentEmployer
        {
            get { return _CurrentEmployer; }
            set { _CurrentEmployer = value; }
        }

        string _EmployeeType;

        /// <summary>
        /// Gets or sets the value of variable EmployeeType.
        /// </summary>
        [TestVariable("da75f681-3298-44e1-a330-15bb707ca58e")]
        public string EmployeeType
        {
            get { return _EmployeeType; }
            set { _EmployeeType = value; }
        }

        string _YearsWorked;

        /// <summary>
        /// Gets or sets the value of variable YearsWorked.
        /// </summary>
        [TestVariable("81daaf3c-b6a4-4e79-a416-5c92e6ced50c")]
        public string YearsWorked
        {
            get { return _YearsWorked; }
            set { _YearsWorked = value; }
        }

        string _MonthsWorked;

        /// <summary>
        /// Gets or sets the value of variable MonthsWorked.
        /// </summary>
        [TestVariable("29776896-f3f9-42f3-b524-deb73a05c92c")]
        public string MonthsWorked
        {
            get { return _MonthsWorked; }
            set { _MonthsWorked = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBox' at Center.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBoxInfo, new RecordItemIndex(0));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(1));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AnnualSalary' with focus on 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBox'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBoxInfo, new RecordItemIndex(2));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.AnnualSalaryInputBox.PressKeys(AnnualSalary);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBox' at Center.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBoxInfo, new RecordItemIndex(3));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$JobTitle' with focus on 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBox'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBoxInfo, new RecordItemIndex(5));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.JobTitleInputBox.PressKeys(JobTitle);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBox' at Center.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBoxInfo, new RecordItemIndex(6));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBox.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CurrentEmployer' with focus on 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBox'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBoxInfo, new RecordItemIndex(8));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.CurrentEmployerInputBox.PressKeys(CurrentEmployer);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$EmployeeType' on item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.EmploymentTypeOfEmployeeDropdown'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.EmploymentTypeOfEmployeeDropdownInfo, new RecordItemIndex(9));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.EmploymentTypeOfEmployeeDropdown.Element.SetAttributeValue("TagValue", EmployeeType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(10));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$YearsWorked' on item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.YearsDropdown'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.YearsDropdownInfo, new RecordItemIndex(11));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.YearsDropdown.Element.SetAttributeValue("TagValue", YearsWorked);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(12));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$MonthsWorked' on item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.MonthsDropdown'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.MonthsDropdownInfo, new RecordItemIndex(13));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.MonthsDropdown.Element.SetAttributeValue("TagValue", MonthsWorked);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.NoRadioButton'.", repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.NoRadioButtonInfo, new RecordItemIndex(14));
            repo.EasternOnlineBankingDashboard.EmploymentAndIncomePage.SingleApplicantEmploymentAndIncome.NoRadioButton.PerformClick();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
