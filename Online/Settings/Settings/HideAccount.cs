///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Settings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The HideAccount recording.
    /// </summary>
    [TestModule("9019409b-1550-4848-a1d1-a1048c609a01", ModuleType.Recording, 1)]
    public partial class HideAccount : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SettingsRepository repository.
        /// </summary>
        public static SettingsRepository repo = SettingsRepository.Instance;

        static HideAccount instance = new HideAccount();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public HideAccount()
        {
            varAccount = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static HideAccount Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable varAccount.
        /// </summary>
        [TestVariable("c07eb653-2d1c-48bd-a22d-a4281036c887")]
        public string varAccount
        {
            get { return repo.varAccount; }
            set { repo.varAccount = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 10;
            Keyboard.DefaultKeyPressTime = 10;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBox'.", repo.EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBoxInfo, new RecordItemIndex(0));
            repo.EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBox.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varAccount' with focus on 'EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBox'.", repo.EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBoxInfo, new RecordItemIndex(1));
            repo.EasternOnlineBankingDashboard.ManageAccountsPage.SearchAccountsInputBox.PressKeys(varAccount, 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'EasternOnlineBankingDashboard.ManageAccountsPage.N1SearchResultFound'", repo.EasternOnlineBankingDashboard.ManageAccountsPage.N1SearchResultFoundInfo, new RecordItemIndex(2));
            repo.EasternOnlineBankingDashboard.ManageAccountsPage.N1SearchResultFoundInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.ManageAccountsPage.ShowHideAccountToggle'.", repo.EasternOnlineBankingDashboard.ManageAccountsPage.ShowHideAccountToggleInfo, new RecordItemIndex(3));
            repo.EasternOnlineBankingDashboard.ManageAccountsPage.ShowHideAccountToggle.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'EasternOnlineBankingDashboard.ShowHideAccountSuccessModal'", repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SelfInfo, new RecordItemIndex(4));
            repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SelfInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessHeader'.", repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessHeaderInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessHeaderInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='You have hidden this account. If you hide an account, all of your account information and settings will remain intact, but this account will no longer appear on your account dashboard. Keep in mind that if you have online statements turned on for this account, you must \"show\" this account to view those statements.') on item 'EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessMessage'.", repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessMessageInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.SuccessMessageInfo, "InnerText", "You have hidden this account. If you hide an account, all of your account information and settings will remain intact, but this account will no longer appear on your account dashboard. Keep in mind that if you have online statements turned on for this account, you must \"show\" this account to view those statements.");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.Donebutton'.", repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.DonebuttonInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.ShowHideAccountSuccessModal.DonebuttonInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(8));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
