///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Transfersv2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DeleteOneTimeScheduledTransfer recording.
    /// </summary>
    [TestModule("21d2764d-18fd-4d37-b719-3f70440c863b", ModuleType.Recording, 1)]
    public partial class DeleteOneTimeScheduledTransfer : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TransfersRepository repository.
        /// </summary>
        public static TransfersRepository repo = TransfersRepository.Instance;

        static DeleteOneTimeScheduledTransfer instance = new DeleteOneTimeScheduledTransfer();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DeleteOneTimeScheduledTransfer()
        {
            ConfirmationVar = "7517";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DeleteOneTimeScheduledTransfer Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable ConfirmationVar.
        /// </summary>
        [TestVariable("323a9df7-5b7f-4df8-8696-c844efd39566")]
        public string ConfirmationVar
        {
            get { return repo.ConfirmationVar; }
            set { repo.ConfirmationVar = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeader'.", repo.EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeaderInfo, new RecordItemIndex(0));
            repo.EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeader.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(1));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeader'.", repo.EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeaderInfo, new RecordItemIndex(2));
            repo.EasternOnlineBankingDashboard.TransfersPage.ConfirmationNumberTableHeader.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.TransfersPage.ScheduledTransfersPage.DeleteButtonStoredConfVar'.", repo.EasternOnlineBankingDashboard.TransfersPage.ScheduledTransfersPage.DeleteButtonStoredConfVarInfo, new RecordItemIndex(3));
            repo.EasternOnlineBankingDashboard.TransfersPage.ScheduledTransfersPage.DeleteButtonStoredConfVar.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 45s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'EasternOnlineBankingDashboard.DeleteTransferModal'", repo.EasternOnlineBankingDashboard.DeleteTransferModal.SelfInfo, new RecordItemIndex(4));
            repo.EasternOnlineBankingDashboard.DeleteTransferModal.SelfInfo.WaitForAttributeEqual(45000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(5));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.DeleteTransferModal.DeleteTransferButton'.", repo.EasternOnlineBankingDashboard.DeleteTransferModal.DeleteTransferButtonInfo, new RecordItemIndex(6));
            repo.EasternOnlineBankingDashboard.DeleteTransferModal.DeleteTransferButton.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'EasternOnlineBankingDashboard.DeleteTransferSuccessModal'", repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.SelfInfo, new RecordItemIndex(7));
            repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.SelfInfo.WaitForAttributeEqual(60000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.DeleteTransferSuccessModal.SuccessHeader'.", repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.SuccessHeaderInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.SuccessHeaderInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.DeleteTransferSuccessModal.YouHaveSuccessfullyDeletedThisTransfer'.", repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.YouHaveSuccessfullyDeletedThisTransferInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.YouHaveSuccessfullyDeletedThisTransferInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.DeleteTransferSuccessModal.DoneButton'.", repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.DoneButtonInfo, new RecordItemIndex(10));
            repo.EasternOnlineBankingDashboard.DeleteTransferSuccessModal.DoneButton.PerformClick();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
