///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace LoginTestSuite
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ForgotsernameModalValidation recording.
    /// </summary>
    [TestModule("84358167-11fb-4803-8b1e-d0919520b530", ModuleType.Recording, 1)]
    public partial class ForgotsernameModalValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LoginTestSuiteRepository repository.
        /// </summary>
        public static LoginTestSuiteRepository repo = LoginTestSuiteRepository.Instance;

        static ForgotsernameModalValidation instance = new ForgotsernameModalValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ForgotsernameModalValidation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ForgotsernameModalValidation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.ForgotUsernameHeader'.", repo.Finacle.ForgotUsernameModal.ForgotUsernameHeaderInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.ForgotUsernameHeaderInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.ForgotUsernameInfo'.", repo.Finacle.ForgotUsernameModal.ForgotUsernameInfoInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.ForgotUsernameInfoInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.AccountNumberInputBox'.", repo.Finacle.ForgotUsernameModal.AccountNumberInputBoxInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.AccountNumberInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.EmailInputBox'.", repo.Finacle.ForgotUsernameModal.EmailInputBoxInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.EmailInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.Last4DigitsSsnInputBox'.", repo.Finacle.ForgotUsernameModal.Last4DigitsSsnInputBoxInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.Last4DigitsSsnInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.CaptchaImage'.", repo.Finacle.CaptchaImageInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Finacle.CaptchaImageInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.RefreshCaptchaButton'.", repo.Finacle.ForgotUsernameModal.RefreshCaptchaButtonInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.RefreshCaptchaButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.CaptchaInputBox'.", repo.Finacle.ForgotUsernameModal.CaptchaInputBoxInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.CaptchaInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.CancelButton'.", repo.Finacle.ForgotUsernameModal.CancelButtonInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.CancelButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.SubmitButton'.", repo.Finacle.ForgotUsernameModal.SubmitButtonInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.SubmitButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Finacle.ForgotUsernameModal.SubmitButton'.", repo.Finacle.ForgotUsernameModal.SubmitButtonInfo, new RecordItemIndex(10));
            repo.Finacle.ForgotUsernameModal.SubmitButton.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.Errors.PleaseCorrectTheFollowingFieldsError'.", repo.Finacle.ForgotUsernameModal.Errors.PleaseCorrectTheFollowingFieldsErrorInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.Errors.PleaseCorrectTheFollowingFieldsErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.Errors.InvalidAccountNumberError'.", repo.Finacle.ForgotUsernameModal.Errors.InvalidAccountNumberErrorInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.Errors.InvalidAccountNumberErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.Errors.InvalidEmailError'.", repo.Finacle.ForgotUsernameModal.Errors.InvalidEmailErrorInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.Errors.InvalidEmailErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotUsernameModal.Errors.InvalidSsnTinError'.", repo.Finacle.ForgotUsernameModal.Errors.InvalidSsnTinErrorInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.Finacle.ForgotUsernameModal.Errors.InvalidSsnTinErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ErrorMessages.InvalidCaptchaError'.", repo.Finacle.ErrorMessages.InvalidCaptchaErrorInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.Finacle.ErrorMessages.InvalidCaptchaErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
