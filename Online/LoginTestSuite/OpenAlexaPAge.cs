///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace LoginTestSuite
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The OpenAlexaPAge recording.
    /// </summary>
    [TestModule("6f9cfedc-20eb-47a7-9e21-a112d173edac", ModuleType.Recording, 1)]
    public partial class OpenAlexaPage : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LoginTestSuiteRepository repository.
        /// </summary>
        public static LoginTestSuiteRepository repo = LoginTestSuiteRepository.Instance;

        static OpenAlexaPage instance = new OpenAlexaPage();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public OpenAlexaPage()
        {
            Browser = "Chrome";
            AlexaUrl = "https://fnclmobqa.easternbank.com:8543/angular/AuthenticationController?__START_TRAN_FLAG__=Y&FORMSGROUP_ID__=AuthenticationFG&__EVENT_ID__=LOAD&FG_BUTTONS__=LOAD&ACTION.LOAD=Y&AuthenticationFG.LOGIN_FLAG=1&BANK_ID=EBK&LANGUAGE_ID=001&ANGULAR_FLAG=Y&ALEXA_FLAG=Y";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static OpenAlexaPage Instance
        {
            get { return instance; }
        }

#region Variables

        string _Browser;

        /// <summary>
        /// Gets or sets the value of variable Browser.
        /// </summary>
        [TestVariable("321de30a-2fab-424b-8b96-712b6dcc73d0")]
        public string Browser
        {
            get { return _Browser; }
            set { _Browser = value; }
        }

        string _AlexaUrl;

        /// <summary>
        /// Gets or sets the value of variable AlexaUrl.
        /// </summary>
        [TestVariable("5f476e95-debd-46e8-b8e7-a12ebac87900")]
        public string AlexaUrl
        {
            get { return _AlexaUrl; }
            set { _AlexaUrl = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site URL in variable $AlexaUrl with browser specified by variable $Browser in maximized mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser(AlexaUrl, Browser, "", false, true, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'Finacle.Alexa.LoginPage.EasternBankLogo'", repo.Finacle.Alexa.LoginPage.EasternBankLogoInfo, new RecordItemIndex(1));
            repo.Finacle.Alexa.LoginPage.EasternBankLogoInfo.WaitForAttributeEqual(60000, "Visible", "True");
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
