///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace LoginTestSuite
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ForgotPasswordModalValidation recording.
    /// </summary>
    [TestModule("7fcb31b8-7181-455a-8e74-8b03d3883695", ModuleType.Recording, 1)]
    public partial class ForgotPasswordModalValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the LoginTestSuiteRepository repository.
        /// </summary>
        public static LoginTestSuiteRepository repo = LoginTestSuiteRepository.Instance;

        static ForgotPasswordModalValidation instance = new ForgotPasswordModalValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ForgotPasswordModalValidation()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ForgotPasswordModalValidation Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.ForgotPasswordHeader'.", repo.Finacle.ForgotPasswordModal.ForgotPasswordHeaderInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.ForgotPasswordHeaderInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.ForgotPasswordInfo'.", repo.Finacle.ForgotPasswordModal.ForgotPasswordInfoInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.ForgotPasswordInfoInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.UsernameInputBox'.", repo.Finacle.ForgotPasswordModal.UsernameInputBoxInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.UsernameInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.RefreshCaptchaButton'.", repo.Finacle.RefreshCaptchaButtonInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.Finacle.RefreshCaptchaButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.CaptchaInputBox'.", repo.Finacle.ForgotPasswordModal.CaptchaInputBoxInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.CaptchaInputBoxInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.CancelButton'.", repo.Finacle.ForgotPasswordModal.CancelButtonInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.CancelButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.ContinueButton'.", repo.Finacle.ForgotPasswordModal.ContinueButtonInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.ContinueButtonInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'Finacle.ForgotPasswordModal.ContinueButton'.", repo.Finacle.ForgotPasswordModal.ContinueButtonInfo, new RecordItemIndex(7));
            repo.Finacle.ForgotPasswordModal.ContinueButton.PerformClick();
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.Errors.PleaseCorrectTheFollowingFieldsError'.", repo.Finacle.ForgotPasswordModal.Errors.PleaseCorrectTheFollowingFieldsErrorInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.Errors.PleaseCorrectTheFollowingFieldsErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ForgotPasswordModal.Errors.InvalidUsernameError'.", repo.Finacle.ForgotPasswordModal.Errors.InvalidUsernameErrorInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.Finacle.ForgotPasswordModal.Errors.InvalidUsernameErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'Finacle.ErrorMessages.InvalidCaptchaError'.", repo.Finacle.ErrorMessages.InvalidCaptchaErrorInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.Finacle.ErrorMessages.InvalidCaptchaErrorInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
