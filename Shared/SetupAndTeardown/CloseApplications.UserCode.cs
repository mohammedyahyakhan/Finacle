///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Login
{
    public partial class CloseApplications
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
       private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Close_application_HomepageEasternBank(RepoItemInfo webdocumentInfo)
        {
        	
        	
        		if (webdocumentInfo.Exists())
        		    {
        			Host.Current.CloseApplication(webdocumentInfo.FindAdapter<WebDocument>(), new Duration(0));
	        		}
        		else Report.Warn("Closed browsers.");
        }
        
        public void Close_application_EasternOnlineBankingDashboard(RepoItemInfo webdocumentInfo)
        {
        		if (webdocumentInfo.Exists())
        		    {
        		    Host.Current.CloseApplication(webdocumentInfo.FindAdapter<WebDocument>(), new Duration(0));
        		    }
        		else Report.Warn("Closed browser");            
        }
        
        //searches for EB tabs in Firefox and closes them
		public static void closingfirefox()
        {
			var easternBankTab = repo.Firefox.EasternBankTab;

			IList<Ranorex.TabPage> tabs = repo.Firefox.EasternBankTabInfo.CreateAdapters<Ranorex.TabPage>();
			        	
        	foreach (Ranorex.TabPage item in tabs)
        	{
        		Keyboard.PrepareFocus(item);
				item.ClickWithoutBoundsCheck("Center");
				Delay.Milliseconds(500);
        		Keyboard.PrepareFocus(item);
        		Text searchWithGoogleOrEnterAddress = "/form[@ProcessName='firefox']/toolbar[@accessiblename='Navigation Toolbar']//text[@accessiblename~'Search.']";
        		
        		searchWithGoogleOrEnterAddress.ClickWithoutBoundsCheck("Center");
        		Delay.Milliseconds(500);
        		Keyboard.PrepareFocus(item);
        		Keyboard.Press("{LControlKey down}{Wkey}{LControlKey up}");
        		Delay.Milliseconds(500);
        	}
		}
		
		public static void closingchrome()
        {
			var easternBankTab = repo.Chrome.EasternBankTab;

			IList<Ranorex.TabPage> tabs = repo.Chrome.EasternBankTabInfo.CreateAdapters<Ranorex.TabPage>();
			
        	foreach (Ranorex.TabPage item in tabs)
        	{
        		Keyboard.PrepareFocus(item);
				item.ClickWithoutBoundsCheck("Center");
				Delay.Milliseconds(500);
				Keyboard.PrepareFocus(item);
        		Text searchWithGoogleOrEnterAddress = "/form[@ProcessName='chrome']//tabpagelist[@accessiblerole='PageTabList']//tabpage[@accessiblename~'Eastern.']/../../container[@accessiblerole='Pane']/container[@accessiblerole='Grouping']/text";
        		
        		searchWithGoogleOrEnterAddress.ClickWithoutBoundsCheck("Center");
        		Delay.Milliseconds(500);
        		Keyboard.PrepareFocus(item);
        		Keyboard.Press("{LControlKey down}{Wkey}{LControlKey up}");
        		Delay.Milliseconds(500);
        	}
        	
        	
		}
		
		public static void closingie()
        {
			var iETab = repo.IE.IETab;

			IList<Ranorex.TabPage> tabs = repo.IE.IETabInfo.CreateAdapters<Ranorex.TabPage>();
			//IList<Ranorex.TabPage> tabs = repo.Chrome.EasternBankTabInfo.CreateAdapters<Ranorex.TabPage>();			
        	foreach (Ranorex.TabPage item in tabs)
        	{
        		Keyboard.PrepareFocus(item);
        		item.ClickWithoutBoundsCheck("Center");
        		Delay.Seconds(1);
        		Keyboard.Press("{LControlKey down}{Wkey}{LControlKey up}");
        		//Text searchWithGoogleOrEnterAddress = "/form[@ProcessName='iexplore']//container//text[@accessiblename='Address']";
        		
        		//searchWithGoogleOrEnterAddress.ClickWithoutBoundsCheck("Center");
        		//Delay.Milliseconds(500);
        		//Keyboard.PrepareFocus(item);
        		//Keyboard.Press("{LControlKey down}{Wkey}{LControlKey up}");
        		//Delay.Milliseconds(500);
        	}
        	
        		
        		
        	}
				
		public static void closebrowsers123()
		{
			IList<Ranorex.WebDocument> webList = Host.Local.Find<Ranorex.WebDocument>("/dom[@domain~'fnclmob.|eastern.']");
				
			foreach (Ranorex.WebDocument webdoc in webList)
			{  
    			webdoc.Close();
   			}
			
		}
		
		public static void closefreecheckingdisclosure()
		{
			IList<Ranorex.WebDocument> webList = Host.Local.Find<Ranorex.WebDocument>("/dom[@domain~pdf]");
				
			
			foreach (Ranorex.WebDocument webdoc in webList)
			{  
    			webdoc.Close();
   			}
		
        	
		}
		

}
}