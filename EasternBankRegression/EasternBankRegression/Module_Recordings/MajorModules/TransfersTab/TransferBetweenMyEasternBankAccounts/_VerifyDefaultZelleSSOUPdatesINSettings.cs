///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace EasternBankRegression.Module_Recordings.MajorModules.TransfersTab.TransferBetweenMyEasternBankAccounts
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The _VerifyDefaultZelleSSOUPdatesINSettings recording.
    /// </summary>
    [TestModule("ae96c31e-ad51-4f3c-9cd3-d68912870da1", ModuleType.Recording, 1)]
    public partial class _VerifyDefaultZelleSSOUPdatesINSettings : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::EasternBankRegression.EasternBankRegressionRepository repository.
        /// </summary>
        public static global::EasternBankRegression.EasternBankRegressionRepository repo = global::EasternBankRegression.EasternBankRegressionRepository.Instance;

        static _VerifyDefaultZelleSSOUPdatesINSettings instance = new _VerifyDefaultZelleSSOUPdatesINSettings();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public _VerifyDefaultZelleSSOUPdatesINSettings()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static _VerifyDefaultZelleSSOUPdatesINSettings Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Settings'.", repo.ApplicationUnderTest.MajorModules.SettingsInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.MajorModules.Settings.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Settings'.", repo.ApplicationUnderTest.MajorModules.SettingsInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.MajorModules.Settings.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccount'.", repo.ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccountInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccount.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccount'.", repo.ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccountInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.MajorModules.Settings_Sub.DefaultAccount.DefaultZelleAccount.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SelectInteretchecking7927.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettings'", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettingsInfo, new RecordItemIndex(6));
            //repo.ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettingsInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'False'. Associated repository item: 'ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettings'", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettingsInfo, new RecordItemIndex(7));
            //repo.ApplicationUnderTest.MajorModules.Transfers_Sub.PleaseWaitFromSettingsInfo.WaitForAttributeEqual(5000, "Visible", "False");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(8));
            Delay.Duration(15000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Transfers'.", repo.ApplicationUnderTest.MajorModules.TransfersInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.MajorModules.Transfers.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Transfers'.", repo.ApplicationUnderTest.MajorModules.TransfersInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.MajorModules.Transfers.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelle'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelleInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelle.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelle'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelleInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.MakeTransferToAnotherPersonZelle.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelle'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelleInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelle.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(14));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelle'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelleInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.SettingsZelle.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.Focuitem'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.FocuitemInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.Focuitem.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by 400 units.", new RecordItemIndex(17));
            Mouse.ScrollWheel(400);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.AccountUsedToSendAndReceiveMoney'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.AccountUsedToSendAndReceiveMoneyInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.MajorModules.Transfers_Sub.MakeTransferZelle_Sub.AccountUsedToSendAndReceiveMoney.Element.InvokeActionWithText("PerformClick");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.MajorModules.Transfers_Sub.ValidatePrimaryAccountSelect'.", repo.ApplicationUnderTest.MajorModules.Transfers_Sub.ValidatePrimaryAccountSelectInfo, new RecordItemIndex(19));
            Validate.Exists(repo.ApplicationUnderTest.MajorModules.Transfers_Sub.ValidatePrimaryAccountSelectInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
