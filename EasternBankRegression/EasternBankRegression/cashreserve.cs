///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace EasternBankRegression
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The cashreserve recording.
    /// </summary>
    [TestModule("952e50eb-cd20-4b67-a2e2-e47df51c0ea6", ModuleType.Recording, 1)]
    public partial class cashreserve : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EasternBankRegressionRepository repository.
        /// </summary>
        public static EasternBankRegressionRepository repo = EasternBankRegressionRepository.Instance;

        static cashreserve instance = new cashreserve();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public cashreserve()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static cashreserve Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.QaLoanAccount'.", repo.EasternOnlineBankingDashboard.QaLoanAccountInfo, new RecordItemIndex(0));
            repo.EasternOnlineBankingDashboard.QaLoanAccount.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'EasternOnlineBankingDashboard.AmountHeader'", repo.EasternOnlineBankingDashboard.AmountHeaderInfo, new RecordItemIndex(1));
            repo.EasternOnlineBankingDashboard.AmountHeaderInfo.WaitForAttributeEqual(60000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.LoanPayoffAmount'.", repo.EasternOnlineBankingDashboard.LoanPayoffAmountInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.LoanPayoffAmountInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'EasternOnlineBankingDashboard.Reversal'.", repo.EasternOnlineBankingDashboard.ReversalInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.EasternOnlineBankingDashboard.ReversalInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'EasternOnlineBankingDashboard.NsfReversal'.", repo.EasternOnlineBankingDashboard.NsfReversalInfo, new RecordItemIndex(4));
            Validate.Exists(repo.EasternOnlineBankingDashboard.NsfReversalInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'EasternOnlineBankingDashboard.NextPageButton'.", repo.EasternOnlineBankingDashboard.NextPageButtonInfo, new RecordItemIndex(5));
            repo.EasternOnlineBankingDashboard.NextPageButton.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'EasternOnlineBankingDashboard.NextPageButton'.", repo.EasternOnlineBankingDashboard.NextPageButtonInfo, new RecordItemIndex(6));
            repo.EasternOnlineBankingDashboard.NextPageButton.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'EasternOnlineBankingDashboard.AdvancedFeeWaiver'.", repo.EasternOnlineBankingDashboard.AdvancedFeeWaiverInfo, new RecordItemIndex(7));
            repo.EasternOnlineBankingDashboard.AdvancedFeeWaiver.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'EasternOnlineBankingDashboard.AdvancedFeeWaiver'.", repo.EasternOnlineBankingDashboard.AdvancedFeeWaiverInfo, new RecordItemIndex(8));
            Validate.Exists(repo.EasternOnlineBankingDashboard.AdvancedFeeWaiverInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'EasternOnlineBankingDashboard.AdvanceFee'.", repo.EasternOnlineBankingDashboard.AdvanceFeeInfo, new RecordItemIndex(9));
            repo.EasternOnlineBankingDashboard.AdvanceFee.Focus();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'EasternOnlineBankingDashboard.AdvanceFee'.", repo.EasternOnlineBankingDashboard.AdvanceFeeInfo, new RecordItemIndex(10));
            Validate.Exists(repo.EasternOnlineBankingDashboard.AdvanceFeeInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
